name: Node.js CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm install  # Install dependencies
      - run: npm run build --if-present

      # Deploy to EC2 instance
      - name: Deploy to EC2
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ec2-user
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: "dist/*"  # Adjust this if your build output is in a different folder
          target: "/home/ec2-user/FYPFrontEnd/"  # Adjust this to your frontend directory

      # Restart your backend service
      - name: Restart Backend Service
        run: |
          echo "${{ secrets.EC2_KEY }}" > ec2_key.pem
          chmod 600 ec2_key.pem
          ssh -i ec2_key.pem ec2-user@${{ secrets.EC2_HOST }} 'sudo systemctl restart myapp.service'
          rm -f ec2_key.pem  # Clean up the key file after use
